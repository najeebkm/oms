@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}

@mixin transform($transforms) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  -ms-transform: $transforms;
  -o-transform: $transforms;
  transform: $transforms;
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin breakpoint($point) {
	@if $point == large {
		@media (min-width: 64.375em) { @content; }
	}
	@else if $point == medium {
		@media (min-width: 50em) { @content; }
	}
	@else if $point == small {
		@media (min-width: 37.5em)  { @content; }
	}
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}

@mixin box-shadow($args...) {
  -webkit-box-shadow: $args;
  -moz-box-shadow: $args;
  box-shadow: $args;
}

@mixin backgroundEffects($color: $brand) {
  background-color: $color;
  
  &:hover {
    background-color: lighten($color, 5%);
  }

  &:focus {
    background-color: lighten($color, 10%);
    outline: none;
  }

  &:active {
    background-color: lighten($color, 10%);
    box-shadow: none;
  }
}

@mixin linkEffects($color: $brand) {
  color: $color;

  &:hover,
  &:active,
  &:focus {
    color: darken($color, 5%);
  }
}

@-webkit-keyframes progress {
  0%   { width: 0%; @include opacity(1); }
  96%  { width: 100%; @include opacity(1); }
  100% { width: 100%; @include opacity(.1); }
}
@-moz-keyframes progress {
  0%   { width: 0%; @include opacity(1); }
  96%  { width: 100%; @include opacity(1); }
  100% { width: 100%; @include opacity(.1); }
}
@-o-keyframes progress {
  0%   { width: 0%; @include opacity(1); }
  96%  { width: 100%; @include opacity(1); }
  100% { width: 100%; @include opacity(.1); }
}
@keyframes progress {
  0%   { width: 0%; @include opacity(1); }
  96%  { width: 100%; @include opacity(1); }
  100% { width: 100%; @include opacity(.1); }
}

.progress-animation {
	-webkit-animation: progress .9s; /* Safari 4+ */
	-moz-animation:    progress .9s; /* Fx 5+ */
	-o-animation:      progress .9s; /* Opera 12+ */
	animation:         progress .9s; /* IE 10+, Fx 29+ */
}

%animate {
  @include transition(all .3s cubic-bezier(0.075, 0.82, 0.165, 1));
}

%float {
  @include box-shadow(0px 0px 1px 0px darken($lightGray, 15%));
}

%floatVertical {
  @include box-shadow(0px 2px 2px 1px darken($lightGray, 1%));
}

%resetList {
  list-style: none;
  margin: 0px;
  padding: 0px;
}